rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Rules for user profile images
    match /users/{userId}/profile/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rules for agent documents (ID proof, address proof, vehicle proof)
    match /agents/{agentId}/documents/{allPaths=**} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == agentId || 
         exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
         get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == "admin");
    }
    
    // Rules for order files (uploaded by customers)
    match /orders/{orderId}/files/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (exists(/databases/(default)/documents/orders/$(orderId)) &&
         get(/databases/(default)/documents/orders/$(orderId)).data.customer.phone_number == request.auth.token.phone_number ||
         exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
         get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ["admin", "agent"]);
    }
    
    // Rules for processed order files (generated by system)
    match /orders/{orderId}/processed/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ["admin", "agent"];
    }
    
    // Rules for admin uploads (general content, ads, etc.)
    match /admin/{allPaths=**} {
      allow read: if true; // Public read for ads, banners, etc.
      allow write: if request.auth != null && 
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    
    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
